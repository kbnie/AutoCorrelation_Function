// ----------------------------------------------------------------------------
// Copyright (c) 2013 Semiconductor Components Industries, LLC
// (d/b/a ON Semiconductor). All Rights Reserved.
//
// This code is the property of ON Semiconductor and may not be redistributed
// in any form without prior written permission from ON Semiconductor. The
// terms of use and warranty for this code are covered by contractual
// agreements between ON Semiconductor and the licensee.
// ----------------------------------------------------------------------------
// app_memory.cfs
// - Application-level memory allocations
// ----------------------------------------------------------------------------
// $Revision: 1.12 $
// $Date: 2013/11/20 16:11:34 $
// ----------------------------------------------------------------------------

#include <sk4_sys.cfi>
#include "app.cfi"

    //
    // Start an absolute segment for the stack
    //
    Sys_Mem_Start_Absolute_Segment(X_System_Stack_Memory_Reserved,      \
                                   SYS_MEMSPACE_X,                      \
                                   (D_XMEM_TOP - STACK_SIZE + 1))
    // Allocate memory for the stack
    Sys_Mem_Reserve(X_STACK_BOTTOM, STACK_SIZE)

    //
    // Start an absolute segment for the WOLA intermediate results, part0
    //
    Sys_Mem_Start_Absolute_Segment(X_System_WOLA_Temp0_Memory_Reserved, \
                                   SYS_MEMSPACE_X,                      \
                                   X_WOLA_TEMP0_BASE)
    // Allocate memory for the WOLA intermediate results, part0.
    // This is used for both analysis and synthesis, and could be potentially
    // reused for other intermediate variables if conserving memory is of
    // concern.
    Sys_Mem_Reserve(X_WOLA_TEMP0, WOLA_N)

    //
    // Start an absolute segment for the WOLA intermediate results, part1
    //
    Sys_Mem_Start_Absolute_Segment(X_System_WOLA_Temp1_Memory_Reserved, \
                                   SYS_MEMSPACE_X,                      \
                                   X_WOLA_TEMP1_BASE)
    // Allocate memory for the WOLA intermediate results, part1.
    // This is used for both analysis and synthesis, and could be potentially
    // reused for other intermediate variables if conserving memory is of
    // concern.
    Sys_Mem_Reserve(X_WOLA_TEMP1, WOLA_N)

    //
    // Start an absolute segment for the analysis results
    //
    Sys_Mem_Start_Absolute_Segment(X_System_Analysis_Results_Memory_Reserved, \
                                   SYS_MEMSPACE_X,                            \
                                   X_ANALYSIS_RESULTS_BASE)
    // Allocate memory for the analysis results
    Sys_Mem_Reserve(X_ANALYSIS_RESULTS, WOLA_N)

    //
    // Start an absolute segment for the gain table
    //
    Sys_Mem_Start_Absolute_Segment(X_System_Gain_Table_Memory_Reserved, \
                                   SYS_MEMSPACE_X,                      \
                                   X_GAIN_TABLE_BASE)
    // Allocate memory for the gain table
    Sys_Mem_Reserve_Init(X_GAIN_TABLE, GAIN_TABLE_SIZE, UNITY_GAIN)


    //
    // Reserve memory for each of the FIFOs using the macro
    // generated by the HCT (see the HCT-generated include file)
    //
    HCT_FIFO_Reserve_Mem


    //
    // Start a relocatable segment for variables in X-memory
    //
    Sys_Mem_Start_Segment(X_System_Memory_Reserved, \
                          SYS_MEMSPACE_X)
    // Initialize X_FIFO_0_DONE to 0
    Sys_Mem_Reserve_Init(X_FIFO_0_DONE, 1, 0)
    // Initialize X_HEAR_FUNCTION_CHAIN0_DONE to 0
    Sys_Mem_Reserve_Init(X_HEAR_FUNCTION_CHAIN0_DONE, 1, 0)
    // Initialize X_HEAR_FUNCTION_CHAIN1_DONE to 0
    Sys_Mem_Reserve_Init(X_HEAR_FUNCTION_CHAIN1_DONE, 1, 0)
    // Initialize X_HEAR_FUNCTION_CHAIN2_DONE to 0
    Sys_Mem_Reserve_Init(X_HEAR_FUNCTION_CHAIN2_DONE, 1, 0)
    // Initialize X_CM3_0_DONE to 0
    Sys_Mem_Reserve_Init(X_CM3_0_DONE, 1, 0)
    //Initialize X_SPI_DONE to 0    
    Sys_Mem_Reserve_Init(X_SPI_DONE, 1, 0)
    //Initialize X_UART_DONE to 0    
    Sys_Mem_Reserve_Init(X_SPI_FLAG, 1, 0)

    //
    // Start a relocatable segment for variables in Y-memory
    //
    Sys_Mem_Start_Segment(Y_System_Memory_Reserved, \
                          SYS_MEMSPACE_Y)

    // Allocate memory for Y-memory variables here

    //
    // Start a relocatable segment for variables in XY-memory
    //
    Sys_Mem_Start_Segment(XY_System_Memory_Reserved, \
                          SYS_MEMSPACE_XY)

    // Allocate memory for XY-memory variables here

    //
    // Allocate memory for Filter Engine coefficients
    //
    // Coefficient set C0: unity filter
    // b0 = 1,
    // b1 = 0,
    // b2 = 0,
    // a1 = 0,
    // a2 = 0.
    Sys_Data_FENG_Coefficients(0,                   \
                               4194303,             \
                               0,                   \
                               0,                   \
                               0,                   \
                               0)

    // Coefficient set C1: 1st order LPF to attenuate out-of-band components
    // in the G.722 decoder output
    // b0 = 0.9992,
    // b1 = 0.9992,
    // b2 = 0,
    // a1 = 0.9984,
    // a2 = 0.
    Sys_Data_FENG_Coefficients(1,                   \
                               4190949,             \
                               4190949,             \
                               0,                   \
                               -4187593,            \
                               0)

